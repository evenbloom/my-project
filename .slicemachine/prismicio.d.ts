// Code generated by Slice Machine. DO NOT EDIT.

import type * as prismicT from "@prismicio/types";
import type * as prismic from "@prismicio/client";

type Simplify<T> = {
    [KeyType in keyof T]: T[KeyType];
};
/** Content for Homepage documents */
interface HomepageDocumentData {
    /**
     * Title field in *Homepage*
     *
     * - **Field Type**: Text
     * - **Placeholder**: *None*
     * - **API ID Path**: homepage.title
     * - **Tab**: Main
     * - **Documentation**: https://prismic.io/docs/core-concepts/key-text
     *
     */
    title: prismicT.KeyTextField;
    /**
     * Slice Zone field in *Homepage*
     *
     * - **Field Type**: Slice Zone
     * - **Placeholder**: *None*
     * - **API ID Path**: homepage.slices[]
     * - **Tab**: Main
     * - **Documentation**: https://prismic.io/docs/core-concepts/slices
     *
     */
    slices: prismicT.SliceZone<HomepageDocumentDataSlicesSlice>;
}
/**
 * Slice for *Homepage → Slice Zone*
 *
 */
type HomepageDocumentDataSlicesSlice = HeroSliceSlice | ProjectsSlice | AnimationSlice | WhatIOfferSlice;
/**
 * Homepage document from Prismic
 *
 * - **API ID**: `homepage`
 * - **Repeatable**: `false`
 * - **Documentation**: https://prismic.io/docs/core-concepts/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type HomepageDocument<Lang extends string = string> = prismicT.PrismicDocumentWithoutUID<Simplify<HomepageDocumentData>, "homepage", Lang>;
/** Content for Page documents */
interface PageDocumentData {
    /**
     * Title field in *Page*
     *
     * - **Field Type**: Text
     * - **Placeholder**: *None*
     * - **API ID Path**: page.title
     * - **Tab**: Main
     * - **Documentation**: https://prismic.io/docs/core-concepts/key-text
     *
     */
    title: prismicT.KeyTextField;
    /**
     * Slice Zone field in *Page*
     *
     * - **Field Type**: Slice Zone
     * - **Placeholder**: *None*
     * - **API ID Path**: page.slices[]
     * - **Tab**: Main
     * - **Documentation**: https://prismic.io/docs/core-concepts/slices
     *
     */
    slices: prismicT.SliceZone<PageDocumentDataSlicesSlice>;
}
/**
 * Slice for *Page → Slice Zone*
 *
 */
type PageDocumentDataSlicesSlice = OtherPagesSlice;
/**
 * Page document from Prismic
 *
 * - **API ID**: `page`
 * - **Repeatable**: `true`
 * - **Documentation**: https://prismic.io/docs/core-concepts/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type PageDocument<Lang extends string = string> = prismicT.PrismicDocumentWithUID<Simplify<PageDocumentData>, "page", Lang>;
export type AllDocumentTypes = HomepageDocument | PageDocument;
/**
 * Primary content in Animation → Primary
 *
 */
interface AnimationSliceDefaultPrimary {
    /**
     * Title field in *Animation → Primary*
     *
     * - **Field Type**: Title
     * - **Placeholder**: This is where it all begins...
     * - **API ID Path**: animation.primary.title
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    title: prismicT.TitleField;
    /**
     * Description field in *Animation → Primary*
     *
     * - **Field Type**: Rich Text
     * - **Placeholder**: A nice description of your feature
     * - **API ID Path**: animation.primary.description
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    description: prismicT.RichTextField;
}
/**
 * Default variation for Animation Slice
 *
 * - **API ID**: `default`
 * - **Description**: `Animation`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type AnimationSliceDefault = prismicT.SharedSliceVariation<"default", Simplify<AnimationSliceDefaultPrimary>, never>;
/**
 * Slice variation for *Animation*
 *
 */
type AnimationSliceVariation = AnimationSliceDefault;
/**
 * Animation Shared Slice
 *
 * - **API ID**: `animation`
 * - **Description**: `Animation`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type AnimationSlice = prismicT.SharedSlice<"animation", AnimationSliceVariation>;
/**
 * Primary content in HeroSlice → Primary
 *
 */
interface HeroSliceSliceDefaultPrimary {
    /**
     * Title field in *HeroSlice → Primary*
     *
     * - **Field Type**: Title
     * - **Placeholder**: This is where it all begins...
     * - **API ID Path**: hero_slice.primary.title
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    title: prismicT.TitleField;
    /**
     * Description field in *HeroSlice → Primary*
     *
     * - **Field Type**: Rich Text
     * - **Placeholder**: A nice description of your feature
     * - **API ID Path**: hero_slice.primary.description
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    description: prismicT.RichTextField;
    /**
     * Image field in *HeroSlice → Primary*
     *
     * - **Field Type**: Image
     * - **Placeholder**: *None*
     * - **API ID Path**: hero_slice.primary.image
     * - **Documentation**: https://prismic.io/docs/core-concepts/image
     *
     */
    image: prismicT.ImageField<never>;
}
/**
 * Item in HeroSlice → Items
 *
 */
export interface HeroSliceSliceDefaultItem {
    /**
     * CTA Link field in *HeroSlice → Items*
     *
     * - **Field Type**: Link
     * - **Placeholder**: *None*
     * - **API ID Path**: hero_slice.items[].cta
     * - **Documentation**: https://prismic.io/docs/core-concepts/link-content-relationship
     *
     */
    cta: prismicT.LinkField;
    /**
     * CTA Text field in *HeroSlice → Items*
     *
     * - **Field Type**: Text
     * - **Placeholder**: *None*
     * - **API ID Path**: hero_slice.items[].cta_text
     * - **Documentation**: https://prismic.io/docs/core-concepts/key-text
     *
     */
    cta_text: prismicT.KeyTextField;
}
/**
 * Default variation for HeroSlice Slice
 *
 * - **API ID**: `default`
 * - **Description**: `HeroSlice`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type HeroSliceSliceDefault = prismicT.SharedSliceVariation<"default", Simplify<HeroSliceSliceDefaultPrimary>, Simplify<HeroSliceSliceDefaultItem>>;
/**
 * Slice variation for *HeroSlice*
 *
 */
type HeroSliceSliceVariation = HeroSliceSliceDefault;
/**
 * HeroSlice Shared Slice
 *
 * - **API ID**: `hero_slice`
 * - **Description**: `HeroSlice`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type HeroSliceSlice = prismicT.SharedSlice<"hero_slice", HeroSliceSliceVariation>;
/**
 * Primary content in OtherPages → Primary
 *
 */
interface OtherPagesSliceDefaultPrimary {
    /**
     * Title field in *OtherPages → Primary*
     *
     * - **Field Type**: Title
     * - **Placeholder**: This is where it all begins...
     * - **API ID Path**: other_pages.primary.title
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    title: prismicT.TitleField;
    /**
     * Description field in *OtherPages → Primary*
     *
     * - **Field Type**: Rich Text
     * - **Placeholder**: A nice description of your feature
     * - **API ID Path**: other_pages.primary.description
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    description: prismicT.RichTextField;
    /**
     * Profile Picture field in *OtherPages → Primary*
     *
     * - **Field Type**: Image
     * - **Placeholder**: *None*
     * - **API ID Path**: other_pages.primary.profile_picture
     * - **Documentation**: https://prismic.io/docs/core-concepts/image
     *
     */
    profile_picture: prismicT.ImageField<never>;
}
/**
 * Default variation for OtherPages Slice
 *
 * - **API ID**: `default`
 * - **Description**: `OtherPages`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type OtherPagesSliceDefault = prismicT.SharedSliceVariation<"default", Simplify<OtherPagesSliceDefaultPrimary>, never>;
/**
 * Slice variation for *OtherPages*
 *
 */
type OtherPagesSliceVariation = OtherPagesSliceDefault;
/**
 * OtherPages Shared Slice
 *
 * - **API ID**: `other_pages`
 * - **Description**: `OtherPages`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type OtherPagesSlice = prismicT.SharedSlice<"other_pages", OtherPagesSliceVariation>;
/**
 * Item in Projects → Items
 *
 */
export interface ProjectsSliceDefaultItem {
    /**
     * Image field in *Projects → Items*
     *
     * - **Field Type**: Image
     * - **Placeholder**: *None*
     * - **API ID Path**: projects.items[].image
     * - **Documentation**: https://prismic.io/docs/core-concepts/image
     *
     */
    image: prismicT.ImageField<never>;
}
/**
 * Default variation for Projects Slice
 *
 * - **API ID**: `default`
 * - **Description**: `Projects`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type ProjectsSliceDefault = prismicT.SharedSliceVariation<"default", Record<string, never>, Simplify<ProjectsSliceDefaultItem>>;
/**
 * Slice variation for *Projects*
 *
 */
type ProjectsSliceVariation = ProjectsSliceDefault;
/**
 * Projects Shared Slice
 *
 * - **API ID**: `projects`
 * - **Description**: `Projects`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type ProjectsSlice = prismicT.SharedSlice<"projects", ProjectsSliceVariation>;
/**
 * Primary content in WhatIOffer → Primary
 *
 */
interface WhatIOfferSliceDefaultPrimary {
    /**
     * Title section field in *WhatIOffer → Primary*
     *
     * - **Field Type**: Rich Text
     * - **Placeholder**: *None*
     * - **API ID Path**: what_i_offer.primary.title_section
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    title_section: prismicT.RichTextField;
    /**
     * Section Description field in *WhatIOffer → Primary*
     *
     * - **Field Type**: Rich Text
     * - **Placeholder**: *None*
     * - **API ID Path**: what_i_offer.primary.section_description
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    section_description: prismicT.RichTextField;
}
/**
 * Item in WhatIOffer → Items
 *
 */
export interface WhatIOfferSliceDefaultItem {
    /**
     * Numbers field in *WhatIOffer → Items*
     *
     * - **Field Type**: Text
     * - **Placeholder**: *None*
     * - **API ID Path**: what_i_offer.items[].numbers
     * - **Documentation**: https://prismic.io/docs/core-concepts/key-text
     *
     */
    numbers: prismicT.KeyTextField;
    /**
     * Title Points field in *WhatIOffer → Items*
     *
     * - **Field Type**: Rich Text
     * - **Placeholder**: Key Points
     * - **API ID Path**: what_i_offer.items[].title_points
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    title_points: prismicT.RichTextField;
    /**
     * Desciption field in *WhatIOffer → Items*
     *
     * - **Field Type**: Rich Text
     * - **Placeholder**: description of key points
     * - **API ID Path**: what_i_offer.items[].key_description
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    key_description: prismicT.RichTextField;
}
/**
 * Default variation for WhatIOffer Slice
 *
 * - **API ID**: `default`
 * - **Description**: `WhatIOffer`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type WhatIOfferSliceDefault = prismicT.SharedSliceVariation<"default", Simplify<WhatIOfferSliceDefaultPrimary>, Simplify<WhatIOfferSliceDefaultItem>>;
/**
 * Slice variation for *WhatIOffer*
 *
 */
type WhatIOfferSliceVariation = WhatIOfferSliceDefault;
/**
 * WhatIOffer Shared Slice
 *
 * - **API ID**: `what_i_offer`
 * - **Description**: `WhatIOffer`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type WhatIOfferSlice = prismicT.SharedSlice<"what_i_offer", WhatIOfferSliceVariation>;
declare module "@prismicio/client" {
    interface CreateClient {
        (repositoryNameOrEndpoint: string, options?: prismic.ClientConfig): prismic.Client<AllDocumentTypes>;
    }
    namespace Content {
        export type { HomepageDocumentData, HomepageDocumentDataSlicesSlice, HomepageDocument, PageDocumentData, PageDocumentDataSlicesSlice, PageDocument, AllDocumentTypes, AnimationSliceDefaultPrimary, AnimationSliceDefault, AnimationSliceVariation, AnimationSlice, HeroSliceSliceDefaultPrimary, HeroSliceSliceDefaultItem, HeroSliceSliceDefault, HeroSliceSliceVariation, HeroSliceSlice, OtherPagesSliceDefaultPrimary, OtherPagesSliceDefault, OtherPagesSliceVariation, OtherPagesSlice, ProjectsSliceDefaultItem, ProjectsSliceDefault, ProjectsSliceVariation, ProjectsSlice, WhatIOfferSliceDefaultPrimary, WhatIOfferSliceDefaultItem, WhatIOfferSliceDefault, WhatIOfferSliceVariation, WhatIOfferSlice };
    }
}
